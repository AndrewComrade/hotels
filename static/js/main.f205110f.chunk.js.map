{"version":3,"sources":["redux/constants/types.js","redux/reducers/hotels.js","redux/reducers/rootReducer.js","redux/store.js","components/FilterElements/Country.jsx","components/FilterElements/Type.jsx","components/FilterElements/Stars.jsx","components/FilterElements/Reviews.jsx","components/FilterElements/Price.jsx","redux/actions/hotels.js","components/Filter.jsx","redux/actions/filters.js","components/Hotel.jsx","App.js","index.js"],"names":["SET_HOTELS","FILTER_HOTELS","RESET_FILTERS","SET_CURRENT_PAGE","initialState","hotels","filteredHotels","isLoaded","perPage","currentPage","rootReducer","combineReducers","hotelsReducer","state","action","type","payload","country","types","stars","reviewsAmount","priceRange","filter","hotel","length","includes","reviews_amount","min_price","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Country","countries","onChange","value","onCountryChange","event","Autocomplete","onAbort","renderInput","params","TextField","label","variant","options","useStyles","makeStyles","formControl","width","Type","classes","FormControl","className","InputLabel","id","Select","multiple","renderValue","join","target","map","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","Stars","handleChange","e","name","component","FormLabel","FormGroup","item","index","FormControlLabel","control","toString","Reviews","Input","parseInt","placeholder","inputProps","step","min","Price","maxPrice","marks","Slider","max","newValue","aria-labelledby","setHotels","setCurrentPage","currentPAge","FilterBlock","styled","div","FilterElement","removeDuplicates","arr","Set","Filter","dispatch","useDispatch","useSelector","React","useState","filterData","setFilterData","sort","Math","ceil","apply","Button","onClick","Object","keys","key","filterHotels","HotelBlock","li","LeftContent","RightContent","InfoBlock","InfoText","span","Hotel","description","currency","isBooked","setBooked","Rating","readOnly","Place","fontSize","floor","color","startIcon","Check","CalendarToday","prooTypes","PropTypes","string","isRequired","number","Container","List","ul","App","count","useEffect","axios","get","then","data","Fragment","slice","Pagination","page","CircularProgress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f205110f.chunk.js","sourcesContent":["export const SET_HOTELS = 'SET_HOTELS';\r\nexport const FILTER_HOTELS = 'FILTER_HOTELS';\r\nexport const RESET_FILTERS = 'RESET_FILTERS';\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\n","import {FILTER_HOTELS, RESET_FILTERS, SET_CURRENT_PAGE, SET_HOTELS} from \"../constants/types\";\r\n\r\nconst initialState = {\r\n\thotels: [],\r\n\tfilteredHotels: [],\r\n\tisLoaded: false,\r\n\tperPage: 3,\r\n\tcurrentPage: 1\r\n};\r\n\r\nexport const hotelsReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_HOTELS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\thotels: action.payload,\r\n\t\t\t\tfilteredHotels: action.payload,\r\n\t\t\t\tisLoaded: true\r\n\t\t\t};\r\n\t\tcase SET_CURRENT_PAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentPage: action.payload,\r\n\t\t\t}\r\n\t\tcase RESET_FILTERS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfilteredHotels: state.hotels\r\n\t\t\t};\r\n\t\tcase FILTER_HOTELS:\r\n\t\t\tlet {country, types, stars, reviewsAmount, priceRange} = action.payload;\r\n\t\t\tlet filteredHotels = state.hotels;\r\n\r\n\t\t\tif (country) {\r\n\t\t\t\tfilteredHotels = filteredHotels\r\n\t\t\t\t\t.filter(hotel => hotel.country === country);\r\n\t\t\t}\r\n\t\t\tif (types && types.length > 0) {\r\n\t\t\t\tfilteredHotels = filteredHotels\r\n\t\t\t\t\t.filter(hotel => types.includes(hotel.type));\r\n\t\t\t}\r\n\t\t\tif (stars && stars.length > 0) {\r\n\t\t\t\tfilteredHotels = filteredHotels\r\n\t\t\t\t\t.filter(hotel => stars.includes(hotel.stars));\r\n\t\t\t}\r\n\t\t\tif (reviewsAmount > 0) {\r\n\t\t\t\tfilteredHotels = filteredHotels\r\n\t\t\t\t\t.filter(hotel => hotel.reviews_amount >= reviewsAmount)\r\n\t\t\t}\r\n\t\t\tif (priceRange && priceRange.length > 0) {\r\n\t\t\t\tfilteredHotels = filteredHotels\r\n\t\t\t\t\t.filter(hotel => hotel.min_price >= priceRange[0] && hotel.min_price <= priceRange[1])\r\n\t\t\t}\r\n\t\t\treturn {...state, filteredHotels};\r\n\t\tdefault:\r\n\t\t\treturn {...state};\r\n\t}\r\n};","import {combineReducers} from \"redux\";\r\n\r\nimport {hotelsReducer} from \"./hotels\"\r\n\r\nexport const rootReducer = combineReducers({\r\n\t\thotelsReducer,\r\n\t}\r\n)\r\n","import {createStore, compose, applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport {rootReducer} from \"./reducers/rootReducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcomposeEnhancers(applyMiddleware(thunk))\r\n)\r\n\r\nwindow.store = store\r\n\r\nexport default store\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Autocomplete} from \"@material-ui/lab\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\nexport const Country = ({countries, onChange, value}) => {\r\n\r\n\tconst onCountryChange = (event, value) => {\r\n\t\tonChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Autocomplete\r\n\t\t\tvalue={value}\r\n\t\t\tonAbort={onCountryChange}\r\n\t\t\tonChange={onCountryChange}\r\n\t\t\trenderInput={(params) => <TextField label=\"Страна\" variant=\"outlined\" {...params} />}\r\n\t\t\toptions={countries}\r\n\t\t>\r\n\t\t</Autocomplete>\r\n\t);\r\n};\r\n\r\nCountry.propTypes = {\r\n\tcountries: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n\tvalue: PropTypes.string,\r\n\tonChange: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {makeStyles, Checkbox, ListItemText, MenuItem, Select, FormControl, InputLabel} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\tformControl: {\r\n\t\twidth: \"100%\",\r\n\t}\r\n}));\r\n\r\nexport const Type = ({types, value, onChange}) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tonChange(event.target.value)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<FormControl variant=\"outlined\" className={classes.formControl}>\r\n\t\t\t<InputLabel id=\"types-label\">Тип</InputLabel>\r\n\t\t\t<Select\r\n\t\t\t\tmultiple\r\n\t\t\t\tlabel=\"Тип\"\r\n\t\t\t\trenderValue={(value) => value.join(', ')}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tvalue={value}\r\n\t\t\t>\r\n\t\t\t\t{types.map((type) => (\r\n\t\t\t\t\t<MenuItem key={type} value={type}>\r\n\t\t\t\t\t\t<Checkbox checked={value.indexOf(type) > -1}/>\r\n\t\t\t\t\t\t<ListItemText primary={type}/>\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t))}\r\n\t\t\t</Select>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nType.propTypes = {\r\n\ttypes:  PropTypes.arrayOf(PropTypes.string).isRequired,\r\n\tvalue:  PropTypes.arrayOf(PropTypes.string).isRequired,\r\n\tonChange: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {FormControl, FormLabel, FormGroup, FormControlLabel, Checkbox} from \"@material-ui/core\";\r\n\r\nexport const Stars = ({stars, onChange, value}) => {\r\n\tconst handleChange = (e) => {\r\n\t\tconst {name, checked} = e.target;\r\n\t\tonChange({...value, [name]: checked});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<FormControl component=\"fieldset\">\r\n\t\t\t<FormLabel component=\"legend\">Количество звёзд</FormLabel>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t{stars && stars.map((item, index) => (\r\n\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tcontrol={<Checkbox checked={!!value[item]} onChange={handleChange} name={item.toString()}/>}\r\n\t\t\t\t\t\tlabel={item}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</FormGroup>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nStars.propTypes = {\r\n\tstars: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n\tvalue: PropTypes.object.isRequired,\r\n\tonChange: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {FormControl, Input, InputLabel} from \"@material-ui/core\";\r\n\r\nexport const Reviews = ({value, onChange}) => {\r\n\tconst onReviewsChange = (event) => {\r\n\t\tonChange(parseInt(event.target.value))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FormControl variant=\"outlined\">\r\n\t\t\t<InputLabel>Кол-во отзывов (от):</InputLabel>\r\n\t\t\t<Input variant=\"outlined\" value={value} onChange={onReviewsChange} placeholder=\"Например, от 10\" inputProps={{type: \"number\", step: \"1\", min: \"0\"}}/>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nReviews.propTypes = {\r\n\tvalue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n\tonChange: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormControl, FormLabel, makeStyles, Slider} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\tformControl: {\r\n\t\twidth: \"80%\",\r\n\t}\r\n}));\r\n\r\nexport const Price = ({onChange, priceRange, maxPrice}) => {\r\n\tconst classes = useStyles();\r\n\r\n\tif (!priceRange.length > 0) {\r\n\t\tpriceRange = [0, maxPrice]\r\n\t}\r\n\r\n\tconst onPriceChange = (event, newValue) => {\r\n\t\tonChange(newValue)\r\n\t}\r\n\r\n\tconst marks = [\r\n\t\t{value: priceRange[0], label: priceRange[0] + ' RUB'},\r\n\t\t{value: priceRange[1], label: priceRange[1] + ' RUB'},\r\n\t]\r\n\r\n\r\n\treturn (\r\n\t\t<FormControl className={classes.formControl}>\r\n\t\t\t<FormLabel>Цена</FormLabel>\r\n\t\t\t<Slider\r\n\t\t\t\tmin={0}\r\n\t\t\t\tmax={maxPrice}\r\n\t\t\t\tstep={500}\r\n\t\t\t\tvalue={priceRange}\r\n\t\t\t\tonChange={onPriceChange}\r\n\t\t\t\taria-labelledby=\"range-slider\"\r\n\t\t\t\tmarks={marks}\r\n\t\t\t/>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nPrice.propTypes = {\r\n\tonChange: PropTypes.func.isRequired,\r\n\tmaxPrice: PropTypes.number.isRequired,\r\n\tpriceRange: PropTypes.arrayOf(PropTypes.number).isRequired\r\n}\r\n","import {SET_CURRENT_PAGE, SET_HOTELS} from \"../constants/types\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchHotels = () => dispatch => {\r\n\taxios.get('https://andrewcomrade.github.io/hotels/hotels.json').then(({data: {hotels}}) => {\r\n\t\tdispatch(setHotels(hotels))\r\n\t})\r\n}\r\n\r\nexport const setHotels = (hotels) => ({\r\n\ttype: SET_HOTELS,\r\n\tpayload: hotels,\r\n})\r\n\r\nexport const setCurrentPage = (currentPAge) => ({\r\n\ttype: SET_CURRENT_PAGE,\r\n\tpayload: currentPAge\r\n})\r\n","import React from 'react';\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport {Country, Type, Stars, Reviews, Price} from './FilterElements';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {filterHotels, resetFilters} from \"../redux/actions/filters\";\r\nimport {setCurrentPage} from \"../redux/actions/hotels\";\r\n\r\nconst FilterBlock = styled.div`\r\n\tdisplay:flex;\r\n\tflex-direction: column;\t\r\n`\r\n\r\nconst FilterElement = styled.div`\r\n\tmargin-bottom: 30px;\r\n`\r\n\r\nconst initFilterState = () => ({\r\n\tcountry: null,\r\n\ttypes: [],\r\n\tstars: {},\r\n\treviewsAmount: \"\",\r\n\tpriceRange: []\r\n});\r\n\r\nconst removeDuplicates = (arr, value) => {\r\n\tarr = arr.map(item => item[value])\r\n\tarr = [...new Set(arr)]\r\n\treturn arr\r\n}\r\n\r\nexport const Filter = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst hotels = useSelector(({hotelsReducer}) => hotelsReducer.hotels)\r\n\r\n\tconst [filterData, setFilterData] = React.useState(initFilterState());\r\n\r\n\tconst countries = removeDuplicates(hotels, 'country').sort()\r\n\tconst types = removeDuplicates(hotels, 'type')\r\n\tconst stars = removeDuplicates(hotels, 'stars').sort()\r\n\r\n\tconst maxPrice = Math.ceil(Math.max.apply(Math, removeDuplicates(hotels, 'min_price')) / 1000) * 1000\r\n\r\n\tconst setCountry = (country) => {\r\n\t\tsetFilterData({...filterData, country})\r\n\t}\r\n\r\n\tconst setType = (types) => {\r\n\t\tsetFilterData({...filterData, types})\r\n\t}\r\n\r\n\tconst setStars = (stars) => {\r\n\t\tsetFilterData({...filterData, stars})\r\n\t}\r\n\r\n\tconst setReviewAmount = (reviewsAmount) => {\r\n\t\tsetFilterData({...filterData, reviewsAmount})\r\n\t}\r\n\r\n\tconst setPriceRange = (priceRange) => {\r\n\t\tsetFilterData({...filterData, priceRange})\r\n\t}\r\n\r\n\tconst onApplyFilter = () => {\r\n\t\tconst stars = Object.keys(filterData.stars)\r\n\t\t\t.filter(key => filterData.stars[key])\r\n\t\t\t.map(item => parseInt(item));\r\n\r\n\t\tdispatch(filterHotels({...filterData, stars}))\r\n\t\tdispatch(setCurrentPage(1))\r\n\t}\r\n\r\n\tconst onResetFilter = () => {\r\n\t\tsetFilterData(initFilterState());\r\n\t\tdispatch(resetFilters())\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FilterBlock>\r\n\t\t\t<FilterElement>\r\n\t\t\t\t<Country countries={countries} onChange={setCountry} value={filterData.country}/>\r\n\t\t\t</FilterElement>\r\n\r\n\t\t\t<FilterElement>\r\n\t\t\t\t<Type types={types} onChange={setType} value={filterData.types}/>\r\n\t\t\t</FilterElement>\r\n\r\n\t\t\t<FilterElement>\r\n\t\t\t\t<Stars stars={stars} onChange={setStars} value={filterData.stars}/>\r\n\t\t\t</FilterElement>\r\n\r\n\t\t\t<FilterElement>\r\n\t\t\t\t<Reviews onChange={setReviewAmount} value={filterData.reviewsAmount}/>\r\n\t\t\t</FilterElement>\r\n\r\n\t\t\t<FilterElement>\r\n\t\t\t\t<Price onChange={setPriceRange} priceRange={filterData.priceRange} maxPrice={maxPrice}/>\r\n\t\t\t</FilterElement>\r\n\r\n\t\t\t<FilterElement>\r\n\t\t\t\t<Button onClick={onApplyFilter} variant=\"contained\">\r\n\t\t\t\t\tFilter\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button onClick={onResetFilter} variant=\"contained\">\r\n\t\t\t\t\tReset filter\r\n\t\t\t\t</Button>\r\n\t\t\t</FilterElement>\r\n\t\t</FilterBlock>\r\n\t);\r\n};\r\n","import {FILTER_HOTELS, RESET_FILTERS} from \"../constants/types\";\r\n\r\nexport const filterHotels = (filterData) => ({\r\n\ttype: FILTER_HOTELS,\r\n\tpayload: filterData\r\n})\r\n\r\nexport const resetFilters = () => ({\r\n\ttype: RESET_FILTERS,\r\n\tpayload: {}\r\n})\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Button from '@material-ui/core/Button';\r\nimport {CalendarToday, Place, Check} from '@material-ui/icons';\r\n\r\nconst HotelBlock = styled.li`\r\n\tmargin-bottom: 15px;\r\n\tpadding: 10px 20px;\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr auto;\r\n\tcolumn-gap: 20px;\r\n\tlist-style: none;\r\n\tborder: 1px solid rgba(34, 60, 80, 0.5);\r\n\tborder-radius: 20px;\r\n\tbox-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\r\n`\r\n\r\nconst LeftContent = styled.div`\r\n\tdisplay:flex;\r\n\tflex-direction: column;\r\n`\r\n\r\nconst RightContent = styled(LeftContent)`\r\n`\r\n\r\nconst InfoBlock = styled.div`\r\n\tdisplay:flex;\r\n\talign-items: center;\r\n`\r\n\r\nconst InfoText = styled.span`\r\n\tmargin-left: 15px;\r\n\tdisplay:flex;\r\n\talign-items: center;\r\n`\r\n\r\nexport const Hotel = ({name, stars, type, reviews_amount, country, description, min_price, currency}) => {\r\n\tconst [isBooked, setBooked] = React.useState(false)\r\n\r\n\treturn (\r\n\t\t<HotelBlock>\r\n\t\t\t<LeftContent>\r\n\t\t\t\t<h3>{name}</h3>\r\n\t\t\t\t<InfoBlock>\r\n\t\t\t\t\t<Rating value={stars} readOnly/>\r\n\t\t\t\t\t<InfoText>{type}</InfoText>\r\n\t\t\t\t\t<InfoText>Кол-во отзывов: {reviews_amount}</InfoText>\r\n\t\t\t\t\t<InfoText>\r\n\t\t\t\t\t\t<Place fontSize=\"small\"/>\r\n\t\t\t\t\t\t{country}\r\n\t\t\t\t\t</InfoText>\r\n\t\t\t\t</InfoBlock>\r\n\t\t\t\t<p>{description}</p>\r\n\t\t\t</LeftContent>\r\n\t\t\t<RightContent>\r\n\t\t\t\t<p>{Math.ceil(Math.floor(min_price) / 100) * 100} {currency}</p>\r\n\t\t\t\t<span>За 1 ночь</span>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={() => setBooked(!isBooked)}\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor={isBooked ? \"secondary\" : \"primary\"}\r\n\t\t\t\t\tstartIcon={isBooked ? <Check/> : <CalendarToday/>}\r\n\t\t\t\t>\r\n\t\t\t\t\tЗабронировать\r\n\t\t\t\t</Button>\r\n\t\t\t</RightContent>\r\n\t\t</HotelBlock>\r\n\t);\r\n};\r\n\r\nHotel.prooTypes = {\r\n\tname: PropTypes.string.isRequired,\r\n\tstars: PropTypes.number.isRequired,\r\n\ttype: PropTypes.string.isRequired,\r\n\treviews_amount: PropTypes.number.isRequired,\r\n\tcountry:  PropTypes.string.isRequired,\r\n\tmin_price:  PropTypes.number.isRequired,\r\n\tcurrency: PropTypes.string.isRequired\r\n}\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport styled from \"styled-components\";\r\nimport './app.scss'\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {Pagination} from \"@material-ui/lab\";\r\n\r\nimport {Filter, Hotel} from './components'\r\nimport {fetchHotels, setCurrentPage} from \"./redux/actions/hotels\";\r\n\r\nconst Container = styled.div`\r\n\tmargin: 0 auto;\r\n\tpadding: 0;\r\n\tmax-width: 1170px;\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr 2fr;\r\n\tgrid-column-gap: 50px;\r\n\theight: 100vh;\r\n`\r\n\r\nconst List = styled.ul`\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n`\r\n\r\nexport const App = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst {\r\n\t\tisLoaded,\r\n\t\tperPage,\r\n\t\tcurrentPage,\r\n\t\tfilteredHotels\r\n\t} = useSelector(({hotelsReducer}) => hotelsReducer)\r\n\r\n\tlet count = Math.ceil(filteredHotels.length / perPage)\r\n\r\n\tReact.useEffect(() => {\r\n\t\tdispatch(fetchHotels())\r\n\t}, [])\r\n\r\n\tconst onPageChange = (event, value) => {\r\n\t\tdispatch(setCurrentPage(value))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{!!isLoaded &&\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Filter/>\r\n\t\t\t\t<List>{filteredHotels && filteredHotels\r\n\t\t\t\t\t.slice(perPage * (currentPage - 1), perPage * currentPage)\r\n\t\t\t\t\t.map(hotel => (\r\n\t\t\t\t\t\t<Hotel key={`${hotel.name}`} {...hotel}/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{filteredHotels.length === 0 && <div>Записей не найдено</div>}\r\n\t\t\t\t\t{filteredHotels.length > 0 &&\r\n\t\t\t\t\t\t<Pagination onChange={onPageChange} page={currentPage} count={count}/>\r\n\t\t\t\t\t}\r\n\t\t\t\t</List>\r\n\t\t\t</React.Fragment>\r\n\t\t\t}\r\n\t\t\t{!isLoaded && <CircularProgress/>}\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport {App} from './App';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App/>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}